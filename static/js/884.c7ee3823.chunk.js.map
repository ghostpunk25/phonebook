{"version":3,"file":"static/js/884.c7ee3823.chunk.js","mappings":"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","sources":["redux/contactsApi/contacts-selectors/contacts-selectors.jsx","components/AddContactForm/AddContactForm.styled.jsx","components/AddContactForm/AddContactForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","pages/PhonebookInfo/PhonebookInfo.sryled.jsx","pages/PhonebookInfo/PhonebookInfo.jsx"],"sourcesContent":["\r\nexport const getContact = state => state.contacts.contacts;\r\n\r\nexport const getLoading = state => state.contacts.isLoading;","import styled from 'styled-components';\r\n\r\n\r\nexport const Label = styled.label`\r\nfont-size: ${p => p.theme.fontSize.m};\r\nfont-weight: ${p => p.theme.fontWeights.bold};\r\nmargin-bottom: ${p => p.theme.space[2]}px;\r\n`\r\n\r\nexport const Input = styled.input`\r\nfont-size: ${p => p.theme.fontSize.m};\r\npadding: ${p => p.theme.space[4]}px;\r\nmargin-bottom: ${p => p.theme.space[5]}px;\r\n`\r\n\r\nexport const Btn = styled.button`\r\nbackground: ${p => p.theme.colors.react};\r\npadding: ${p => p.theme.space[5]}px;\r\nfont-weight: ${p => p.theme.fontWeights.bold};\r\nfont-size: ${p => p.theme.fontSize.m};\r\ntransition: all 0.3s ease 0s;\r\n:hover{\r\n   background: ${p => p.theme.colors.btn};\r\n}\r\n`","import { Box } from 'components/Box/Box';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from 'redux/contactsApi/contacts-operations/contacts-operations';\r\nimport { getContact } from 'redux/contactsApi/contacts-selectors/contacts-selectors';\r\nimport { Btn, Label, Input } from './AddContactForm.styled';\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\n\r\nexport const AddContactForm = () => {\r\n   const dispatch = useDispatch()\r\n   const contacts = useSelector(getContact)\r\n\r\n   const formik = useFormik({\r\n      initialValues: {\r\n         name: '',\r\n         number: '',\r\n      },\r\n      onSubmit: values => {\r\n         if (contacts.find(contact => contact.name === values.name)) {\r\n            return Notify.info('Контакт вже існує');\r\n         };\r\n\r\n         dispatch(addContact(values))\r\n         formik.resetForm()\r\n      },\r\n   });\r\n   return (\r\n      <Box mb='6' as='form' display='flex' flexDirection='column' onSubmit={formik.handleSubmit}>\r\n         <Label htmlFor=\"name\">Контакт</Label>\r\n         <Input\r\n            id='name'\r\n            name=\"name\"\r\n            type=\"text\"\r\n            required\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n         />\r\n         <Label htmlFor=\"number\">Номер</Label>\r\n         <Input\r\n            id='number'\r\n            name=\"number\"\r\n            type=\"number\"\r\n            required\r\n            onChange={formik.handleChange}\r\n            value={formik.values.number}\r\n         />\r\n         <Btn type=\"submit\">Додати контакт</Btn>\r\n      </Box>\r\n   );\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Span = styled.span`\r\nwidth: 50px;\r\nheight: 50px;\r\nbackground: ${p => p.theme.colors.random};\r\ndisplay: block;\r\nborder-radius: ${p => p.theme.radii.round};\r\n`\r\nexport const Btn = styled.button`\r\ncolor: ${p => p.theme.colors.hover};\r\n`\r\n\r\nexport const P = styled.p`\r\ntext-align: center;\r\nmargin-top: ${p => p.theme.space[8]}px;\r\nfont-size: ${p => p.theme.fontSize.m};\r\n`","import { Box } from \"components/Box/Box\";\r\nimport { Btn, Span, P } from \"./ContactsList.styled\";\r\n\r\n\r\nexport const ContactsList = ({ items, removeContact }) => {\r\n   return (\r\n      <Box as='ul' overflow='auto' height='400px' mb='4' color='white' display='flex' flexDirection='column' gridGap='5' background='#282c34' p='5'>\r\n         {items.length !== 0 ? items.map(item => (\r\n            <Box as='li' display='flex' gridGap='5' justifyContent='space-between' borderBottom='1px solid #9e9e9e47' key={item.id}>\r\n               <Box display='flex' gridGap='5' alignItems='center'>\r\n                  <Span></Span>\r\n                  <Box display='flex' flexDirection='column' gridGap='3'>\r\n                     <p>{item.name}</p>\r\n                     <p>{item.number}</p>\r\n                  </Box>\r\n               </Box>\r\n               <Btn type=\"button\" onClick={() => removeContact(item.id)}>Видалити</Btn>\r\n            </Box>\r\n         )) : <P>Контакт ще не додано!</P>}\r\n      </Box >\r\n   );\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\nfont-size: ${p => p.theme.fontSize.m};\r\npadding: ${p => p.theme.space[4]}px;\r\nmargin-bottom: ${p => p.theme.space[6]}px;\r\n`\r\nexport const H1 = styled.h1`\r\nfont-size: ${p => p.theme.fontSize.xl};\r\nfont-weight: ${p => p.theme.fontWeights.bold};\r\ntext-align: center;\r\n`\r\nexport const Label = styled.label`\r\ndisplay: inline-flex;\r\njustify-content: flex-end;\r\nposition: relative;\r\ncursor: pointer;\r\n:before{\r\n   content: '';\r\n   flex: 0 0 50px;\r\n   height: 50px; \r\n   background: ${p => p.theme.colors.text};\r\n   border-radius: ${p => p.theme.radii.round};\r\n}\r\n:after{\r\n      content: '';\r\n      position: absolute;\r\n      top 50%;\r\n      left: -25px;\r\n      height: 20px;\r\n      width: 2px;\r\n      background: black;\r\n      transform: translate(-50%,-50%) rotate(0deg);\r\n      transition: all 0.3s ease 0s;\r\n}\r\n`\r\nexport const Span = styled.span`\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 50%;\r\n:after{\r\n   content: '';\r\n   position: absolute;\r\n   left: -35px;\r\n   width: 20px;\r\n   height: 2px;\r\n   background: black;\r\n}\r\n`\r\n\r\nexport const Btn = styled.input`\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nopacity: 0;\r\n:checked + Label:after{\r\n   transform: translate(-50%,-50%) rotate(90deg);\r\n}\r\n`","import { AddContactForm } from \"components/AddContactForm/AddContactForm\"\r\nimport { Box } from \"components/Box/Box\";\r\nimport { ContactsList } from \"components/ContactsList/ContactsList\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getContacts, deleteContact } from \"redux/contactsApi/contacts-operations/contacts-operations\";\r\nimport { getContact } from \"redux/contactsApi/contacts-selectors/contacts-selectors\"\r\nimport { H1, Label, Input, Span, Btn } from \"./PhonebookInfo.sryled\";\r\n\r\nconst PhonebookInfo = () => {\r\n   const dispatch = useDispatch();\r\n   const contacts = useSelector(getContact);\r\n   const [filterContact, setFilterContact] = useState('')\r\n   const [isVisibleForm, setIsVisibleForm] = useState(false)\r\n\r\n   useEffect(() => {\r\n      dispatch(getContacts())\r\n   }, [dispatch]);\r\n\r\n   const handleDeletecontact = (id) => {\r\n      dispatch(deleteContact(id))\r\n   };\r\n\r\n   const handleFilter = (e) => {\r\n      setFilterContact(e.target.value)\r\n   };\r\n\r\n   const handleClickForm = (e) => {\r\n      setIsVisibleForm(e.target.checked)\r\n   };\r\n\r\n   const normalize = filterContact.toLowerCase();\r\n   const visibleCintacts = useMemo(() => {\r\n      return contacts?.filter(item => item.name.toLowerCase().includes(normalize))\r\n   },\r\n      [contacts, normalize])\r\n\r\n   return (\r\n      <Box px='6' display='flex' flexDirection='column'>\r\n         <Box display='flex' flexDirection='column'>\r\n            <Box display='flex' justifyContent='space-between' alignItems='center' mb='5' gridGap='4'>\r\n               <H1>Книга контактів</H1>\r\n               <Box position='relative' pl='50px' onClick={handleClickForm} checked={isVisibleForm}>\r\n                  <Btn type=\"checkbox\" name=\"checkbox\" id=\"c_1\" />\r\n                  <Label htmlFor=\"c_1\"><Span></Span></Label>\r\n               </Box>\r\n            </Box>\r\n            {contacts?.length !== 0 ? <Input onChange={handleFilter} type=\"text\" name=\"filter\" placeholder=\"Знайти контакт\" /> : <Input onChange={handleFilter} type=\"text\" name=\"filter\" disabled placeholder=\"Знайти контакт\" />}\r\n            {isVisibleForm && <AddContactForm />}\r\n            {contacts && <ContactsList removeContact={handleDeletecontact} items={visibleCintacts} />}\r\n         </Box>\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default PhonebookInfo;"],"names":["getContact","state","contacts","Label","styled","p","theme","fontSize","m","fontWeights","bold","space","Input","Btn","colors","react","btn","AddContactForm","dispatch","useDispatch","useSelector","formik","useFormik","initialValues","name","number","onSubmit","values","find","contact","Notify","addContact","resetForm","Box","mb","as","display","flexDirection","handleSubmit","htmlFor","id","type","required","onChange","handleChange","value","Span","random","radii","round","hover","P","ContactsList","items","removeContact","overflow","height","color","gridGap","background","length","map","item","justifyContent","borderBottom","alignItems","onClick","H1","xl","text","useState","filterContact","setFilterContact","isVisibleForm","setIsVisibleForm","useEffect","getContacts","handleFilter","e","target","normalize","toLowerCase","visibleCintacts","useMemo","filter","includes","px","position","pl","checked","placeholder","disabled","deleteContact"],"sourceRoot":""}